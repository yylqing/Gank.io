
    /**
     * 测试一下 MyOkHttpUtil
     */
    public void setText() {
        MyOkHttpUtil.sendOkHttpUtilRequest("http://gank.io/api/indexData/Android/10/5", new StringCallback() {
            @Override
            public void onError(Request request, Exception e) {
                Toast.makeText(MainActivity.this, "失败", Toast.LENGTH_SHORT).show();
                textView1.setText(e.toString());
            }

            @Override
            public void onResponse(String response) {
                Toast.makeText(MainActivity.this, "成功", Toast.LENGTH_SHORT).show();
                textView1 = (TextView) findViewById(R.id.textView1);
                textView1.setText(response);
            }
        });

    }

    public void setImage() {
        imageView1 = (ImageView) findViewById(R.id.imageView);
        MyOkHttpUtil.getImageByOkHttpUtil("http://7xi8d6.com1.z0.glb.clouddn.com/2017-05-02-926821_1453024764952889_775781470_n.jpg", new BitmapCallback() {
            @Override
            public void onError(Request request, Exception e) {

            }

            @Override
            public void onResponse(Bitmap response) {
                imageView1.setImageBitmap(response);
            }
        });
    }


//        展示本地html文件
        webView1 = (WebView) findViewById(R.id.webView1);
        webView1.loadUrl("file:///android_asset/More_about_me.html");

        private static List<DateDB> parseJSON(String indexData) throws Exception{
                List<DateDB> list = new ArrayList<DateDB>();
                JSONArray jsonArray = new JSONArray(indexData);
                String results = jsonArray.getJSONObject(1).toString();
                JSONArray resultsArray = new JSONArray(results);
                for (int i = 0; i < jsonArray.length(); i++){
                    JSONObject jsonObject = jsonArray.getJSONObject(i);
                    String date = jsonObject.getString("1");
                    list.add((new DateDB(date)));
                }
                return list;
        }

        public void initView() {
                final RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recyclerView);
                recyclerView.setItemAnimator(new DefaultItemAnimator());
                CardItemTouchHelperCallback cardCallback = new CardItemTouchHelperCallback<>(recyclerView.getAdapter(), dateList);
                ItemTouchHelper touchHelper = new ItemTouchHelper(cardCallback);
                CardLayoutManager cardLayoutManager = new CardLayoutManager(recyclerView, touchHelper);
                recyclerView.setLayoutManager(cardLayoutManager);
                touchHelper.attachToRecyclerView(recyclerView);
                cardCallback.setOnSwipedListener(new OnSwipeListener<String>() {
                    @Override
                    public void onSwiping(RecyclerView.ViewHolder viewHolder, float ratio, int direction) {
                        Log.i("onSwiping", "onSwiping");
                    }

                    @Override
                    public void onSwiped(RecyclerView.ViewHolder viewHolder, String o, int direction) {
                        Log.i("onSwiped", "onSwiped");
                    }

                    @Override
                    public void onSwipedClear() {
                        Log.i("onSwipedClear", "onSwipedClear");
                    }
                });
            }

         public void initData() {
             final ArrayList<IndexData> myIndexDataList = new ArrayList<>();

             OkHttpUtils.get()
                     .url("http://gank.io/api/data/%E7%A6%8F%E5%88%A9/10/1")
                     .build()
                     .execute(new StringCallback() {
                         @Override
                         public void onError(Request request, Exception e) {
                             Toast.makeText(MainActivity.this, "网络错误", LENGTH_SHORT).show();
                         }

                         @Override
                         public void onResponse(String response) {
                             try {
                                 JSONObject jsonObject = new JSONObject(response);
                                 String results = jsonObject.getString("results");
                                 JSONArray jsonArray = new JSONArray(results);
                                 for (int i = 0; i < jsonArray.length(); i++) {
                                     JSONObject oneResults = jsonArray.getJSONObject(i);
                                     String url = oneResults.getString("url");
                                     String desc = oneResults.getString("desc");
                                     IndexData indexData = new IndexData(url, desc);
                                     indexDatas.add(indexData);
                                     myIndexDataList.add(indexData);
                                     Log.i(String.valueOf(i), myIndexDataList.get(i).getDesc());
                                 }
                             } catch (JSONException e) {
                                 e.printStackTrace();
                             }


                             RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recyclerView);
     //                        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(MainActivity.this);
                             StaggeredGridLayoutManager layoutManager = new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL);
                             SpacesItemDecoration decoration = new SpacesItemDecoration(16);
                             recyclerView.addItemDecoration(decoration);
                             recyclerView.setLayoutManager(layoutManager);
                             IndexDataAdapter adapter = new IndexDataAdapter(indexDatas);
                             recyclerView.setAdapter(adapter);
                         }
                     });
         }

    public void initDate() {
        OkHttpUtils.get()
                .url("http://gank.io/api/day/history")
                .build()
                .execute(new StringCallback() {
                    @Override
                    public void onError(Request request, Exception e) {

                    }

                    @Override
                    public void onResponse(String response) {
                        try {
                            JSONObject jsonObject = new JSONObject(response);
                            String results = jsonObject.getString("results");
                            JSONArray jsonArray = new JSONArray(results);
                            for (int i = 0; i < jsonArray.length(); i++) {
//                                JSONObject haha = jsonArray.getJSONObject(i);
//                                Log.i(String.valueOf(i),haha.getString("desc"));
                                String date = jsonArray.getString(i);
                                Log.i(String.valueOf(i), date);
                                Date dates = new Date(date);
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                            System.out.print("!!!!!!!!!!!!!!hahahhahahahaha!!!!!!!!!!!!!!");
                            System.out.print(e);
                        }
                    }
                });
    }

